{"version":3,"file":"static/js/default.6ef7d28b.chunk.js","mappings":"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","sources":["routes/index.js","locale/utils.js","containers/AppHeader.jsx","containers/ConsoleLayout.jsx","containers/DefaultLayout.jsx","containers/index.js","utils/storage.js"],"sourcesContent":["import AsyncLoadable from '@/utils/AsyncLoadable';\n\n// index\nconst Index = AsyncLoadable(() => import(/* webpackChunkName: 'index' */ '@/views/Index/Index'));\n\n// editor\nconst Editor = AsyncLoadable(() => import(/* webpackChunkName: 'editor' */ '@/views/Editor'));\n\n// instance\nconst Instance = AsyncLoadable(() => import(/* webpackChunkName: 'instance' */ '@/views/Console/Instance'));\n\n// template\nconst Template = AsyncLoadable(() => import(/* webpackChunkName: 'template' */ '@/views/Console/Template'));\n\n// model\nconst Model = AsyncLoadable(() => import(/* webpackChunkName: 'model' */ '@/views/Console/Model'));\n\n// task\nconst Task = AsyncLoadable(() => import(/* webpackChunkName: 'model' */ '@/views/Console/Task'));\n\nconst routes = [\n    { path: '/index', exact: true, name: 'index', component: Index },\n    { path: '/console/instance', exact: true, name: 'instance', component: Instance },\n    { path: '/console/template/editor', exact: true, name: 'editor', component: Editor },\n    { path: '/console/template', exact: true, name: 'template', component: Template },\n    { path: '/console/model', exact: true, name: 'model', component: Model },\n    { path: '/console/task', exact: true, name: 'task', component: Task }\n];\n\nexport default routes;\n","import { ls } from '@/utils/storage';\n\nexport function getNavigatorLanguage() {\n    const lang = navigator.language ?? '';\n    return lang.split('-')[0];\n}\n\nexport function getLocale() {\n    const navigatorLanguage = getNavigatorLanguage();\n    if (ls.get('lang', '')) {\n        return ls.get('lang', '');\n    } else {\n        return navigatorLanguage;\n    }\n}\n\nexport function changeLocale(language) {\n    console.log(language);\n    ls.set('lang', language);\n    window.location.reload();\n}\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Dropdown, Layout, Avatar, Badge } from 'antd';\nimport {\n    BellOutlined,\n    EditOutlined,\n    GithubOutlined,\n    LogoutOutlined,\n    ArrowLeftOutlined,\n    SettingOutlined,\n    AppstoreOutlined\n} from '@ant-design/icons';\nimport { changeLocale } from '@/locale/utils';\nimport { ls } from '@/utils/storage';\nimport { useTranslation } from 'react-i18next';\n\nconst { Header } = Layout;\n\nconst AppHeader = props => {\n    let { avatar, loginOut } = props;\n    const { t } = useTranslation();\n    const history = useHistory();\n    const location = useLocation();\n\n    const userInfo = ls.get('user');\n    if (!userInfo) {\n        history.push('/login');\n    }\n\n    const items = [\n        {\n            key: '1',\n            label: (\n                <span onClick={() => history.push('/console/instance')}>\n                    <AppstoreOutlined /> {t('Console')}\n                </span>\n            )\n        },\n        {\n            type: 'divider'\n        },\n        {\n            key: '2',\n            type: 'group',\n            label: t('User Settings'),\n            children: [\n                {\n                    key: '2-1',\n                    label: (\n                        <span>\n                            <EditOutlined /> {t('Personal')}\n                        </span>\n                    )\n                },\n                {\n                    key: '2-2',\n                    label: (\n                        <span>\n                            <SettingOutlined /> {t('System')}\n                        </span>\n                    ),\n                    children: [\n                        {\n                            key: '2-2-1',\n                            label: (\n                                <span>\n                                    <SettingOutlined /> {t('Language')}\n                                </span>\n                            ),\n                            children: [\n                                {\n                                    key: '2-2-1-1',\n                                    label: <span onClick={() => changeLocale('zh')}>简体中文</span>\n                                },\n                                {\n                                    key: '2-2-1-2',\n                                    label: <span onClick={() => changeLocale('en')}>English</span>\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            type: 'divider'\n        },\n        {\n            key: '3',\n            label: (\n                <span onClick={loginOut}>\n                    <LogoutOutlined /> {t('Sign out')}\n                </span>\n            )\n        }\n    ];\n\n    return (\n        <Header className='header' style={{ height: '50px' }}>\n            <div className='left'>\n                {/* <span style={{ marginRight: '25px', cursor: 'pointer' }} onClick={() => history.push('/')}>\n                    <GithubOutlined type='github' style={{ fontSize: '35px', color: '#000' }} />\n                </span> */}\n\n                <GithubOutlined\n                    type='github'\n                    style={{ marginRight: '30px', cursor: 'pointer', fontSize: '32px', color: '#000' }}\n                    onClick={() => history.push('/index')}\n                />\n\n                {location.pathname !== '/index' && (\n                    <ArrowLeftOutlined\n                        onClick={() => {\n                            history.goBack();\n                            // history.push('/index');\n                        }}\n                    />\n                )}\n            </div>\n            <div className='right'>\n                <div className='mr15'>\n                    <a rel='noopener noreferrer' href='/' target='_blank'>\n                        <GithubOutlined style={{ color: '#000' }} />\n                    </a>\n                </div>\n                <div className='mr15'>\n                    <Badge dot={true} offset={[-2, 0]}>\n                        <a href='/' style={{ color: '#000' }}>\n                            <BellOutlined />\n                        </a>\n                    </Badge>\n                </div>\n                <div>\n                    <Dropdown menu={{ items }} placement='bottomLeft' arrow>\n                        <div style={{ cursor: 'pointer' }}>\n                            <Avatar src={avatar} alt='avatar' className='mr15' />\n                            <span>{userInfo?.nick_name}</span>\n                        </div>\n                    </Dropdown>\n                </div>\n            </div>\n        </Header>\n    );\n};\n\nexport default AppHeader;\n","import React, { useState } from 'react';\nimport { Route, Switch, Redirect, useHistory, useLocation } from 'react-router-dom';\nimport routes from '@/routes';\nimport { Layout, FloatButton, Menu } from 'antd';\nimport '@/style/layout.less';\nimport { CloudServerOutlined, BuildOutlined, LayoutOutlined, DashboardOutlined } from '@ant-design/icons';\n\nconst { Sider, Content } = Layout;\n\nfunction getItem(label, key, icon, children, type) {\n    return {\n        key,\n        icon,\n        children,\n        label,\n        type\n    };\n}\n\nconst items = [\n    getItem('Instance List', '/console/instance', <CloudServerOutlined />),\n    getItem('Task List', '/console/task', <DashboardOutlined />),\n    getItem('Template List', '/console/template', <LayoutOutlined />),\n    getItem('Model List', '/console/model', <BuildOutlined />)\n];\n\nexport default function ConsoleLayout(props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    let query = new URLSearchParams(location.search);\n\n    const [currentMenu, setCurrentMenu] = useState(location.pathname);\n\n    const menuClick = e => {\n        history.push(e.key);\n    };\n\n    return (\n        <Layout style={{ minHeight: 'calc(100vh - 70px)' }}>\n            <FloatButton.BackTop />\n            {query.get('sider') != 'false' && (\n                <Sider width={'15%'} style={{ marginRight: '20px' }}>\n                    <Menu\n                        onClick={menuClick}\n                        style={{\n                            height: '100%',\n                            minWidth: '160px'\n                        }}\n                        defaultSelectedKeys={['1']}\n                        defaultOpenKeys={['sub1']}\n                        mode='inline'\n                        items={items}\n                        selectedKeys={[currentMenu]}\n                    />\n                </Sider>\n            )}\n            <Content className='content'>\n                <Switch>\n                    {routes.map(item => {\n                        return (\n                            <Route\n                                key={item.path}\n                                path={item.path}\n                                exact={item.exact}\n                                render={() => <item.component />}></Route>\n                        );\n                    })}\n                    <Redirect to='/404' />\n                </Switch>\n            </Content>\n        </Layout>\n    );\n}\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport routes from '@/routes';\nimport { Layout, FloatButton } from 'antd';\nimport '@/style/layout.less';\n\nimport AppHeader from './AppHeader.jsx';\nimport avatar from '@/assets/images/user.png';\n\nimport ConsoleLayout from './ConsoleLayout.jsx';\n\nconst { Content } = Layout;\n\nexport default function DefaultLayout(props) {\n    const loginOut = () => {\n        localStorage.clear();\n        props.history.push('/login');\n    };\n\n    return (\n        <Layout className='app'>\n            <FloatButton.BackTop />\n            <Layout style={{ minHeight: '100vh' }}>\n                <AppHeader avatar={avatar} loginOut={loginOut} />\n                <Content className='content'>\n                    <Switch>\n                        {routes.map(item => {\n                            return (\n                                <Route\n                                    key={item.path}\n                                    path={item.path}\n                                    exact={item.exact}\n                                    render={p => {\n                                        if (p.location.pathname.startsWith('/console')) {\n                                            return (\n                                                <ConsoleLayout>\n                                                    <item.component />\n                                                </ConsoleLayout>\n                                            );\n                                        } else {\n                                            return <item.component />;\n                                        }\n                                    }}></Route>\n                            );\n                        })}\n                        <Redirect to='/404' />\n                    </Switch>\n                </Content>\n                {/* <AppFooter /> */}\n            </Layout>\n        </Layout>\n    );\n}\n","import DefaultLayout from './DefaultLayout.jsx';\n\nexport default DefaultLayout;\n","export const ss = {\n    get(key, defaultVal = null) {\n        const ssData = window.sessionStorage.getItem(key);\n        return ssData ? JSON.parse(ssData) : defaultVal;\n    },\n    set(key, val) {\n        return window.sessionStorage.setItem(key, JSON.stringify(val));\n    },\n    remove(key) {\n        return window.sessionStorage.removeItem(key);\n    },\n    clear() {\n        return window.sessionStorage.clear();\n    }\n};\n\nexport const ls = {\n    get(key, defaultVal = null) {\n        const lsData = window.localStorage.getItem(key);\n\n        return lsData && lsData !== 'undefined' ? JSON.parse(lsData) : defaultVal;\n    },\n\n    set(key, val) {\n        return window.localStorage.setItem(key, JSON.stringify(val));\n    },\n\n    remove(key) {\n        return window.localStorage.removeItem(key);\n    },\n\n    clear() {\n        return window.localStorage.clear();\n    }\n};\n"],"names":["Index","AsyncLoadable","Editor","path","exact","name","component","changeLocale","language","console","log","ls","window","location","reload","Header","Layout","props","avatar","loginOut","t","useTranslation","history","useHistory","useLocation","userInfo","push","items","key","label","_jsxs","onClick","children","_jsx","AppstoreOutlined","type","EditOutlined","SettingOutlined","LogoutOutlined","className","style","height","GithubOutlined","marginRight","cursor","fontSize","color","pathname","ArrowLeftOutlined","goBack","rel","href","target","Badge","dot","offset","BellOutlined","Dropdown","menu","placement","arrow","Avatar","src","alt","nick_name","Sider","Content","getItem","icon","CloudServerOutlined","DashboardOutlined","LayoutOutlined","BuildOutlined","ConsoleLayout","query","URLSearchParams","search","_useState","useState","_useState2","_slicedToArray","currentMenu","minHeight","FloatButton","get","width","Menu","e","minWidth","defaultSelectedKeys","defaultOpenKeys","mode","selectedKeys","Switch","routes","item","Route","render","Redirect","to","AppHeader","localStorage","clear","p","startsWith","defaultVal","arguments","length","undefined","lsData","JSON","parse","set","val","setItem","stringify","remove","removeItem"],"sourceRoot":""}