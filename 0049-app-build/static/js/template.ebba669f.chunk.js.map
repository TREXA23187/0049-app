{"version":3,"file":"static/js/template.ebba669f.chunk.js","mappings":"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","sources":["api/console.js","configs/config.default.js","constants/index.js","utils/request.js","views/Console/Template/index.jsx"],"sourcesContent":["import { get, post, del } from '@/utils/request';\n\nexport function createInstance(data) {\n    return post('api/v1/console/instance', data);\n}\nexport function getInstanceList() {\n    return get('api/v1/console/instance/list');\n}\nexport function getInstanceInfo() {\n    return get('api/v1/console/instance/info');\n}\nexport function operateInstance(data) {\n    return post('api/v1/console/instance/operate', data);\n}\nexport function removeInstance(params) {\n    return del('api/v1/console/instance', params);\n}\n\nexport function createTemplate(data) {\n    return post('api/v1/console/template', data);\n}\nexport function getTemplateList() {\n    return get('api/v1/console/template/list');\n}\nexport function removeTemplate(params) {\n    return del('api/v1/console/template', params);\n}\n\nexport function createModel(data) {\n    return post('api/v1/console/model', data);\n}\nexport function getModelList() {\n    return get('api/v1/console/model/list');\n}\nexport function removeModel(params) {\n    return del('api/v1/console/model', params);\n}\n\nexport function createTask(data) {\n    return post('api/v1/console/task', data);\n}\nexport function getTaskList() {\n    return get('api/v1/console/task/list');\n}\nexport function operateTask(data) {\n    return post('api/v1/console/task/operate', data);\n}\nexport function removeTask(params) {\n    return del('api/v1/console/task', params);\n}\n\nexport function createImage(data) {\n    return post('api/v1/console/image', data);\n}\nexport function getImageList() {\n    return get('api/v1/console/image/list');\n}\nexport function getImageInfo(params) {\n    return get('api/v1/console/image/info', params);\n}\nexport function removeImage(params) {\n    return del('api/v1/console/image', params);\n}\n","// const dotenv = require('dotenv');\n\n// dotenv.config();\n\nmodule.exports = process.env;\n","import {\n  NODE_ENV,\n  REACT_APP_BASE_URL_DEV,\n  REACT_APP_BASE_URL_PRO,\n} from '@/configs/config.default';\n\nconst isProduction = NODE_ENV === 'production';\n\nexport const BASE_URL = isProduction\n  ? REACT_APP_BASE_URL_PRO\n  : REACT_APP_BASE_URL_DEV;\n","import axios from 'axios';\nimport { BASE_URL } from '@/constants';\nimport { ls } from '@/utils/storage';\n\nconst instance = axios.create({\n    baseURL: `http://${BASE_URL}:3000`,\n    timeout: 30000\n});\n\ninstance.interceptors.request.use(\n    config => {\n        config.headers.token = ls.get('user')?.token ?? '';\n\n        return config;\n    },\n    err => {\n        return Promise.reject(err);\n    }\n);\n\ninstance.interceptors.response.use(\n    response => {\n        const code = response.data.code;\n\n        // permission error\n        if (code === 10001) {\n            ls.get('user') && ls.remove('user');\n            window.location.replace('/login');\n            return;\n        }\n        return response.data;\n    },\n    err => {\n        return Promise.reject(err);\n    }\n);\n\nexport function get(url, params) {\n    return instance.get(url, {\n        params\n    });\n}\n\nexport function post(url, data) {\n    return instance.post(url, data);\n}\n\nexport function put(url, data) {\n    return instance.put(url, data);\n}\n\nexport function del(url, params) {\n    return instance.delete(url, {\n        params\n    });\n}\n","import React from 'react';\nimport { Col, Row, Button, Table, message } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { getTemplateList, removeTemplate } from '@/api/console';\nimport { useRequest } from '@umijs/hooks';\nimport { useTranslation } from 'react-i18next';\n\nexport default function Template() {\n    const { t } = useTranslation();\n    const history = useHistory();\n    const [messageApi, contextHolder] = message.useMessage();\n\n    const { data: templateList, refresh } = useRequest(async () => {\n        const res = await getTemplateList();\n\n        return res.data?.list;\n    });\n\n    const columns = [\n        {\n            title: t('Name'),\n            dataIndex: 'name',\n            key: 'name'\n        },\n        {\n            title: t('Content'),\n            dataIndex: 'content',\n            key: 'content',\n            render: value => {\n                return value.length > 250 ? value.slice(1, 250) + '...' : value;\n            }\n        },\n        {\n            title: t('Action'),\n            render(rol) {\n                return (\n                    <div>\n                        <Button\n                            type='link'\n                            onClick={() => {\n                                console.log(rol);\n                                history.push(`/console/template/editor?sider=false&data=${rol.content}`);\n                            }}\n                            disabled={rol.title === 'default'}>\n                            {t('Edit')}\n                        </Button>\n                        <Button\n                            type='text'\n                            danger\n                            onClick={async () => {\n                                const res = await removeTemplate({ id: rol.id });\n                                if (res.code === 0) {\n                                    messageApi.success(res.msg);\n                                    refresh();\n                                } else {\n                                    messageApi.error(res.msg);\n                                }\n                            }}\n                            disabled={rol.title === 'default'}>\n                            {t('Remove')}\n                        </Button>\n                    </div>\n                );\n            }\n        }\n    ];\n\n    return (\n        <div>\n            {contextHolder}\n            <Row style={{ marginBottom: '10px' }}>\n                <Col span={2}>\n                    <Button\n                        type='primary'\n                        style={{ margin: '0 10px' }}\n                        onClick={() => {\n                            history.push('/console/template/editor?sider=false');\n                        }}>\n                        New Template\n                    </Button>\n                </Col>\n            </Row>\n            <Table columns={columns} dataSource={templateList} pagination={{ defaultPageSize: 5 }} rowKey='id' />\n        </div>\n    );\n}\n"],"names":["createInstance","data","post","getInstanceList","get","operateInstance","removeInstance","params","del","createTemplate","getTemplateList","removeTemplate","createModel","getModelList","removeModel","createTask","getTaskList","removeTask","createImage","getImageList","getImageInfo","module","exports","process","BASE_URL","NODE_ENV","REACT_APP_BASE_URL_PRO","REACT_APP_BASE_URL_DEV","instance","axios","baseURL","concat","timeout","url","delete","interceptors","request","use","config","_ls$get$token","_ls$get","headers","token","ls","err","Promise","reject","response","code","window","location","replace","Template","t","useTranslation","history","useHistory","_message$useMessage","message","_message$useMessage2","_slicedToArray","messageApi","contextHolder","_useRequest","useRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_res$data","res","wrap","_context","prev","next","sent","abrupt","list","stop","templateList","refresh","columns","title","dataIndex","key","render","value","length","slice","rol","_jsxs","children","_jsx","Button","type","onClick","console","log","push","content","disabled","danger","_callee2","_context2","id","success","msg","error","Row","style","marginBottom","Col","span","margin","Table","dataSource","pagination","defaultPageSize","rowKey"],"sourceRoot":""}