{"version":3,"file":"static/js/editor.64b523ca.chunk.js","mappings":"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","sources":["api/console.js","configs/config.default.js","constants/index.js","utils/request.js","views/Editor/editor-block.jsx","views/Editor/events.js","components/editor/ExportModal.jsx","components/editor/MenuDropdown.jsx","components/editor/TableModal.jsx","components/editor/TableEditor.jsx","components/editor/SwitchEditor.jsx","components/editor/EditorOperator.jsx","components/editor/grid.jsx","views/Editor/editor.jsx","views/Editor/useMenuDragger.js","views/Editor/useFocus.js","views/Editor/useBlockDragger.js","views/Editor/useCommand.js","configs/editor-config.jsx","views/Editor/index.jsx"],"sourcesContent":["import { get, post, del } from '@/utils/request';\n\nexport function createInstance(data) {\n    return post('api/v1/console/instance', data);\n}\nexport function getInstanceList() {\n    return get('api/v1/console/instance/list');\n}\nexport function getInstanceInfo() {\n    return get('api/v1/console/instance/info');\n}\nexport function operateInstance(data) {\n    return post('api/v1/console/instance/operate', data);\n}\nexport function removeInstance(params) {\n    return del('api/v1/console/instance', params);\n}\n\nexport function createTemplate(data) {\n    return post('api/v1/console/template', data);\n}\nexport function getTemplateList() {\n    return get('api/v1/console/template/list');\n}\nexport function removeTemplate(params) {\n    return del('api/v1/console/template', params);\n}\n\nexport function createModel(data) {\n    return post('api/v1/console/model', data);\n}\nexport function getModelList() {\n    return get('api/v1/console/model/list');\n}\nexport function removeModel(params) {\n    return del('api/v1/console/model', params);\n}\n\nexport function createTask(data) {\n    return post('api/v1/console/task', data);\n}\nexport function getTaskList() {\n    return get('api/v1/console/task/list');\n}\nexport function operateTask(data) {\n    return post('api/v1/console/task/operate', data);\n}\nexport function removeTask(params) {\n    return del('api/v1/console/task', params);\n}\n\nexport function createImage(data) {\n    return post('api/v1/console/image', data);\n}\nexport function getImageList() {\n    return get('api/v1/console/image/list');\n}\nexport function getImageInfo(params) {\n    return get('api/v1/console/image/info', params);\n}\nexport function removeImage(params) {\n    return del('api/v1/console/image', params);\n}\n","// const dotenv = require('dotenv');\n\n// dotenv.config();\n\nmodule.exports = process.env;\n","import {\n  NODE_ENV,\n  REACT_APP_BASE_URL_DEV,\n  REACT_APP_BASE_URL_PRO,\n} from '@/configs/config.default';\n\nconst isProduction = NODE_ENV === 'production';\n\nexport const BASE_URL = isProduction\n  ? REACT_APP_BASE_URL_PRO\n  : REACT_APP_BASE_URL_DEV;\n","import axios from 'axios';\nimport { BASE_URL } from '@/constants';\nimport { ls } from '@/utils/storage';\n\nconst instance = axios.create({\n    baseURL: `http://${BASE_URL}:3000`,\n    timeout: 30000\n});\n\ninstance.interceptors.request.use(\n    config => {\n        config.headers.token = ls.get('user')?.token ?? '';\n\n        return config;\n    },\n    err => {\n        return Promise.reject(err);\n    }\n);\n\ninstance.interceptors.response.use(\n    response => {\n        const code = response.data.code;\n\n        // permission error\n        if (code === 10001) {\n            ls.get('user') && ls.remove('user');\n            window.location.replace('/login');\n            return;\n        }\n        return response.data;\n    },\n    err => {\n        return Promise.reject(err);\n    }\n);\n\nexport function get(url, params) {\n    return instance.get(url, {\n        params\n    });\n}\n\nexport function post(url, data) {\n    return instance.post(url, data);\n}\n\nexport function put(url, data) {\n    return instance.put(url, data);\n}\n\nexport function del(url, params) {\n    return instance.delete(url, {\n        params\n    });\n}\n","import React, { useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport deepcopy from 'deepcopy';\n// import BlockResize from './block-resize';\n\nexport default function EditorBlock(props) {\n    const blockRef = useRef();\n\n    const { block, isPreview, updateBlock, onMouseDown, onContextMenu, globalData, updateGlobalData } = props;\n\n    const blockStyles = {\n        top: `${block.top}px`,\n        left: `${block.left}px`,\n        zIndex: block.zIndex\n    };\n\n    useEffect(() => {\n        let { offsetWidth, offsetHeight } = blockRef.current;\n\n        let newBlock = block;\n        if (block.alignCenter) {\n            newBlock = {\n                ...block,\n                left: block.left - offsetWidth / 2,\n                top: block.top - offsetHeight / 2,\n                alignCenter: false\n            };\n        }\n\n        newBlock = {\n            ...newBlock,\n            width: offsetWidth,\n            height: offsetHeight\n        };\n\n        updateBlock(newBlock);\n    }, []);\n\n    const onPreview = async file => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise(resolve => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n    const component = props.config.componentMap[block.key];\n    const RenderComponent = component.render({\n        size: block.hasResize ? { width: block.width, height: block.height } : {},\n        props: block.props,\n        model: Object.keys(component.model || {}).reduce((prev, modelName) => {\n            let propName = block.model[modelName];\n\n            if (propName) {\n                prev[modelName] = {\n                    value: globalData[propName],\n                    onChange: e => {\n                        let newValue;\n                        if (block.key === 'input') {\n                            newValue = e.target.value;\n                        } else if (block.key === 'upload_image') {\n                            const { fileList } = e;\n                            newValue = fileList;\n                        } else {\n                            newValue = e;\n                        }\n                        const newGlobalData = deepcopy(globalData);\n                        newGlobalData[propName] = newValue;\n                        updateGlobalData(newGlobalData);\n                    }\n                };\n\n                if (block.key === 'upload_image') {\n                    prev[modelName] = { ...prev[modelName], onPreview };\n                }\n            }\n\n            return prev;\n        }, {})\n    });\n\n    // const onChange = ({ fileList: newFileList }) => {\n    //   fileList = newFileList;\n    // };\n\n    const blockClassName = classNames({\n        'editor-block-focus': block.focus,\n        'editor-block': !block.focus,\n        'editor-block-preview': isPreview\n    });\n\n    const { width, height } = component.resize || {};\n\n    return (\n        <div\n            className={blockClassName}\n            style={blockStyles}\n            ref={blockRef}\n            onMouseDown={onMouseDown}\n            onContextMenu={onContextMenu}>\n            {RenderComponent}\n\n            {/* {block.focus && (width || height) && (\n        <BlockResize\n          block={block}\n          component={component}\n          updateBlock={updateBlock}\n        />\n      )} */}\n        </div>\n    );\n}\n","import mitt from 'mitt';\n\nexport const events = mitt(); // Export an object for publishing subscriptions\n","import React, { useState } from 'react';\nimport { Button, Modal, Input, message, Space } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\n\nconst { TextArea } = Input;\n\nexport default function ExportModal(props) {\n    const { option, setOption, isModalOpen, handleOk, handleCancel } = props;\n    const [messageApi, contextHolder] = message.useMessage();\n\n    const [exportTitle, setExportTitle] = useState('');\n\n    return (\n        <Modal\n            title={option.title}\n            open={isModalOpen}\n            footer={\n                <>\n                    <Button onClick={handleCancel} danger>\n                        Cancel\n                    </Button>\n                    <Button\n                        onClick={() => {\n                            if (option.callback) {\n                                option.isExport\n                                    ? option.callback(exportTitle, option.content)\n                                    : option.callback(option.content);\n                            } else {\n                                handleOk();\n                            }\n                        }}\n                        type='primary'>\n                        OK\n                    </Button>\n                </>\n            }\n            onCancel={handleCancel}\n            onOk={handleOk}\n            style={{ position: 'relative', minHeight: '400px' }}>\n            {option.isExport && (\n                <Space>\n                    <span>title:</span>\n                    <Input\n                        style={{ width: '300px' }}\n                        value={exportTitle}\n                        onChange={e => {\n                            setExportTitle(e.target.value);\n                        }}\n                    />\n                </Space>\n            )}\n            <TextArea\n                style={{ minHeight: '250px', resize: 'none', cursor: 'text' }}\n                value={option.content}\n                onChange={e => setOption({ ...option, content: e.target.value })}\n                disabled={option.isExport}\n                bordered={!option.isExport}\n            />\n\n            {contextHolder}\n        </Modal>\n    );\n}\n","import React, { useEffect } from 'react';\nimport './index.css';\n\nfunction DropdownItem({ item }) {\n  return (\n    <div onClick={item.onClick} className='menu-dropdown-item'>\n      {item.icon}\n      <span style={{ marginLeft: '5px' }}>{item.label}</span>\n      {item.keyboard && (\n        <span\n          style={{\n            position: 'absolute',\n            right: 8,\n            color: '#ccc',\n          }}\n        >\n          {item.keyboard}\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default function MenuDropdown(props) {\n  const { option, isShow, setIsShow, menuDropdownStyle, menuDropdownRef } =\n    props;\n\n  const onMousedownDocument = (e) => {\n    if (!menuDropdownRef.current?.contains(e.target)) {\n      setIsShow(false);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener('mousedown', onMousedownDocument, true);\n    return () => {\n      document.body.removeEventListener('mousedown', onMousedownDocument);\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        display: isShow ? 'block' : 'none',\n        zIndex: 999,\n        ...menuDropdownStyle,\n      }}\n      ref={menuDropdownRef}\n      className='menu_dropdown'\n    >\n      {option?.content?.map((item) => {\n        return <DropdownItem item={item} key={item.key} />;\n      })}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button, Modal, Table, Space, Input } from 'antd';\nimport deepcopy from 'deepcopy';\n\nexport default function TableModal(props) {\n  const { config, data, isModalOpen, handleOk, handleCancel } = props;\n\n  const [editData, setEditData] = useState(\n    data.map((item, index) => {\n      item.key = index;\n      return item;\n    }) || []\n  );\n\n  let columns = [\n    {\n      title: '',\n      dataIndex: 'key',\n      rowScope: 'row',\n    },\n  ];\n\n  const optionColumns = config.table.options.map((item, index) => {\n    return {\n      title: item.label,\n      dataIndex: item.label,\n      key: index,\n      render: (_, record) => {\n        return (\n          <Input\n            value={record[item.label]}\n            onChange={(e) => {\n              const copyData = deepcopy(editData);\n              copyData[record.key][item.label] = e.target.value;\n              setEditData(copyData);\n            }}\n          />\n        );\n      },\n    };\n  });\n\n  columns = [...columns, ...optionColumns];\n\n  columns.push({\n    title: 'Action',\n    key: 'action',\n    render: (_, record) => (\n      <Space size='middle'>\n        <Button\n          type='text'\n          danger\n          onClick={() => {\n            const newEditData = deepcopy(editData);\n            newEditData.splice(record.key, 1);\n            setEditData(newEditData);\n          }}\n        >\n          Delete\n        </Button>\n      </Space>\n    ),\n  });\n\n  return (\n    <Modal\n      title={config.label}\n      open={isModalOpen}\n      footer={\n        <>\n          <Button\n            onClick={() => {\n              setEditData(data || []);\n              handleCancel();\n            }}\n            danger\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              handleOk(editData);\n            }}\n            type='primary'\n          >\n            OK\n          </Button>\n        </>\n      }\n      onCancel={handleCancel}\n      style={{ position: 'relative' }}\n    >\n      <Space style={{ marginBottom: 8 }}>\n        <Button\n          onClick={() => setEditData([...editData, { key: editData.length }])}\n        >\n          Add\n        </Button>\n        {/* <Button>Reset</Button> */}\n      </Space>\n      <Table columns={columns} dataSource={editData} />\n    </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button, Tag } from 'antd';\nimport TableModal from './TableModal';\n\nexport default function TableEditor(props) {\n  const { propConfig, value, updateValue } = props;\n  const [isTableModalOpen, setIsTableModalOpen] = useState(false);\n  const [data, setData] = useState(value || []);\n\n  const handleOk = (newData) => {\n    setIsTableModalOpen(false);\n    setData(newData);\n    updateValue(newData);\n  };\n\n  const handleCancel = () => {\n    setIsTableModalOpen(false);\n  };\n\n  return (\n    <>\n      <TableModal\n        config={propConfig}\n        data={data}\n        updateData={setData}\n        isModalOpen={isTableModalOpen}\n        handleOk={handleOk}\n        handleCancel={handleCancel}\n      />\n      <div>\n        {(!data || data.length === 0) && (\n          <Button onClick={() => setIsTableModalOpen(true)}>Add</Button>\n        )}\n\n        {(data || []).map((item, index) => {\n          return (\n            <Tag\n              key={index}\n              color='processing'\n              style={{ cursor: 'pointer' }}\n              onClick={() => setIsTableModalOpen(true)}\n            >\n              {item[propConfig.table.key]}\n            </Tag>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch } from 'antd';\n\nexport default function SwitchEditor(props) {\n  const { propConfig, value, updateValue } = props;\n\n  return (\n    <Switch checked={value} onChange={(checked) => updateValue(checked)} />\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  InputNumber,\n  Form,\n  Input,\n  ColorPicker,\n  Select,\n  message,\n} from 'antd';\nimport TableEditor from './TableEditor';\nimport SwitchEditor from './SwitchEditor';\n\nexport default function EditorOperator(props) {\n  const {\n    getLastSelectedBlock,\n    data,\n    config,\n    lastSelectedIndex,\n    editData,\n    updateContainer,\n    updateBlock,\n  } = props;\n  const [content, setContent] = useState([]);\n\n  const [form] = Form.useForm();\n  const [messageApi, contextHolder] = message.useMessage();\n\n  let formValues = {};\n\n  const onReset = () => {\n    if (lastSelectedIndex === -1) {\n      formValues['container_width'] = editData?.width;\n      formValues['container_height'] = editData?.height;\n    } else {\n      const block = getLastSelectedBlock();\n      let component = config.componentMap[block.key];\n      if (component?.props) {\n        Object.entries(component.props).forEach(([propName, propConfig]) => {\n          formValues[propConfig.name] = editData.props[propName];\n        });\n      }\n    }\n\n    form.setFieldsValue(formValues);\n    formValues = {};\n  };\n\n  const onApply = () => {\n    if (lastSelectedIndex === -1) {\n      const { container_width: width, container_height: height } =\n        form.getFieldsValue();\n      updateContainer({\n        ...data,\n        container: { ...data.container, width, height },\n      });\n    } else {\n      const newProps = {};\n      const newModel = {};\n\n      Object.entries(form.getFieldsValue()).forEach(([key, value]) => {\n        if (key.startsWith('props_')) {\n          newProps[key.replace('props_', '')] = value;\n        } else {\n          newModel[key] = value;\n        }\n      });\n\n      updateBlock(\n        {\n          ...editData,\n          props: { ...editData.props, ...newProps },\n          model: { ...editData.model, ...newModel },\n        },\n        editData\n      );\n    }\n\n    messageApi.open({\n      type: 'success',\n      content: 'Successfully applied!',\n    });\n  };\n\n  useEffect(() => {\n    if (!getLastSelectedBlock() || lastSelectedIndex === -1) {\n      formValues['container_width'] = editData?.width;\n      formValues['container_height'] = editData?.height;\n\n      setContent([\n        <>\n          <Form.Item label='Container Width' name='container_width'>\n            <InputNumber />\n          </Form.Item>\n          <Form.Item label='Container Height' name='container_height'>\n            <InputNumber />\n          </Form.Item>\n        </>,\n      ]);\n    } else {\n      const block = getLastSelectedBlock();\n      let component = config.componentMap[block?.key];\n\n      let contentTmp = [];\n\n      if (component && component.props) {\n        const formItems = Object.entries(component.props).map(\n          ([propName, propConfig], index) => {\n            formValues[`props_${propConfig.name}`] = editData.props[propName];\n\n            return (\n              <Form.Item\n                label={propConfig.label}\n                name={`props_${propConfig.name}`}\n                key={propConfig.name}\n              >\n                {{\n                  input: () => <Input />,\n                  inputNum: () => <InputNumber />,\n                  color: () => <ColorPicker format={'hex'} />,\n                  select: () => (\n                    <Select\n                      options={propConfig.options.map((opt) => {\n                        return {\n                          label: opt.label,\n                          value: opt.value,\n                        };\n                      })}\n                    />\n                  ),\n                  table: () => (\n                    <TableEditor\n                      propConfig={propConfig}\n                      value={form.getFieldValue(`props_${propConfig.name}`)}\n                      updateValue={(newValue) =>\n                        form.setFieldValue(`props_${propConfig.name}`, newValue)\n                      }\n                    />\n                  ),\n                  switch: () => (\n                    <SwitchEditor\n                      value={\n                        form.getFieldValue(`props_${propConfig.name}`) || false\n                      }\n                      updateValue={(checked) => {\n                        form.setFieldValue(`props_${propConfig.name}`, checked);\n                      }}\n                    />\n                  ),\n                }[propConfig.type]()}\n              </Form.Item>\n            );\n          }\n        );\n\n        contentTmp = [...contentTmp, formItems];\n      }\n\n      if (component && component.model) {\n        contentTmp.push(\n          Object.entries(component.model).map(([modelName, label]) => {\n            formValues[modelName] = editData.model[modelName];\n\n            return (\n              <Form.Item label={label} name={modelName} key={modelName}>\n                <Input />\n              </Form.Item>\n            );\n          })\n        );\n      }\n\n      setContent(contentTmp);\n    }\n\n    form.setFieldsValue(formValues);\n\n    formValues = {};\n  }, [lastSelectedIndex, getLastSelectedBlock()]);\n\n  return (\n    <div>\n      {/* Attribution */}\n      {contextHolder}\n      <Form\n        name='basic'\n        style={{\n          maxWidth: 300,\n        }}\n        form={form}\n        autoComplete='off'\n      >\n        {content.map((item, index) => {\n          return <div key={index}>{item}</div>;\n        })}\n        <Form.Item\n          wrapperCol={{\n            offset: 4,\n          }}\n        >\n          <Button type='primary' onClick={onApply}>\n            Apply\n          </Button>\n          <Button style={{ marginLeft: '10px' }} onClick={onReset}>\n            Reset\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","import React from 'react';\nimport './index.css';\n\nexport default function Grid() {\n    return (\n        <svg className='grid' width='100%' height='100%' xmlns='http://www.w3.org/2000/svg'>\n            <defs>\n                <pattern id='smallGrid' width='7.236328125' height='7.236328125' patternUnits='userSpaceOnUse'>\n                    <path\n                        d='M 7.236328125 0 L 0 0 0 7.236328125'\n                        fill='none'\n                        stroke='rgba(207, 207, 207, 0.3)'\n                        strokeWidth='1'></path>\n                </pattern>\n                <pattern id='grid' width='36.181640625' height='36.181640625' patternUnits='userSpaceOnUse'>\n                    <rect width='36.181640625' height='36.181640625' fill='url(#smallGrid)'></rect>\n                    <path\n                        d='M 36.181640625 0 L 0 0 0 36.181640625'\n                        fill='none'\n                        stroke='rgba(186, 186, 186, 0.5)'\n                        strokeWidth='1'></path>\n                </pattern>\n            </defs>\n            <rect width='100%' height='100%' fill='url(#grid)'></rect>\n        </svg>\n    );\n}\n","import React, { useState, useRef } from 'react';\nimport { Layout, theme, message, Button, Tabs } from 'antd';\nimport {\n    RollbackOutlined,\n    ImportOutlined,\n    VerticalAlignTopOutlined,\n    VerticalAlignBottomOutlined,\n    CloseOutlined,\n    EditOutlined,\n    EyeOutlined,\n    CopyOutlined,\n    ClearOutlined,\n    SaveOutlined\n} from '@ant-design/icons';\nimport EditorBlock from './editor-block';\nimport './index.css';\nimport useMenuDragger from './useMenuDragger';\nimport { useFocus } from './useFocus';\nimport { useBlockDragger } from './useBlockDragger';\nimport { useCommand } from './useCommand';\nimport { createTemplate } from '@/api/console';\nimport ExportModal from '@/components/editor/ExportModal';\nimport MenuDropdown from '@/components/editor/MenuDropdown';\nimport EditorOperator from '@/components/editor/EditorOperator';\nimport Grid from '../../components/editor/grid';\n\nconst { Header, Content, Sider } = Layout;\n\nexport default function EditorApp(props) {\n    const { data, config, updateData, globalData, updateGlobalData } = props;\n\n    const [isExportModalOpen, setIsExportModalOpen] = useState(false);\n    const [exportModalOption, setExportModalOption] = useState({});\n    const [isPreview, setIsPreview] = useState(false);\n    const [canEdit, setCanEdit] = useState(true);\n    const [isShowMenuDropdown, setIsShowMenuDropdown] = useState(false);\n    const [menuDropdownStyle, setMenuDropdownStyle] = useState({\n        top: 0,\n        left: 0\n    });\n    const [menuDropdownOption, setMenuDropdownOption] = useState({});\n    const [lastSelectedIndex, setLastSelectedIndex] = useState(-1);\n\n    const menuDropdownRef = useRef();\n\n    const {\n        token: { colorBgContainer }\n    } = theme.useToken();\n\n    const [messageApi, contextHolder] = message.useMessage();\n\n    const containerStyles = {\n        width: data.container.width + 'px',\n        height: data.container.height + 'px'\n    };\n\n    const updateBlock = newBlock => {\n        const newBlocks = data.blocks;\n        newBlocks[newBlock.index] = newBlock;\n\n        const newData = {\n            ...data,\n            blocks: newBlocks\n        };\n\n        updateData(newData);\n    };\n\n    const containerRef = useRef();\n    // 1. Menu drag and drop function\n    const { onDragStart, onDragEnd } = useMenuDragger(containerRef, data, updateData);\n\n    // 2. Get Focus\n    const { blockMouseDown, containerMouseDown, getFocusData, getLastSelectedBlock, clearBlockFocus } = useFocus(\n        data,\n        isPreview,\n        menuDropdownRef,\n        {\n            updateData,\n            updateBlock,\n            setLastSelectedIndex\n        },\n        e => {\n            mousedown(e);\n        }\n    );\n\n    // 3. Drag Elements\n    const { mousedown, markLine } = useBlockDragger(getFocusData, getLastSelectedBlock, data, {\n        updateBlock\n    });\n\n    const handleOk = () => {\n        try {\n            const importJson = JSON.parse(exportModalOption.content);\n            commands.updateContainer(importJson);\n            setIsExportModalOpen(false);\n        } catch (error) {\n            messageApi.open({\n                type: 'error',\n                content: 'Invalid JSON'\n            });\n        }\n    };\n\n    const handleCancel = () => {\n        setIsExportModalOpen(false);\n    };\n\n    const onContextMenuBlock = (e, block) => {\n        e.preventDefault();\n\n        setIsShowMenuDropdown(true);\n        setMenuDropdownStyle({ top: block.top + block.height, left: block.left });\n        setMenuDropdownOption({\n            content: [\n                {\n                    label: 'Delete',\n                    key: 'delete',\n                    icon: <CloseOutlined />,\n                    onClick: () => {\n                        commands.delete();\n                        setIsShowMenuDropdown(false);\n                    }\n                },\n                {\n                    label: 'Copy',\n                    key: 'copy',\n                    icon: <CopyOutlined />,\n                    keyboard: 'ctrl+c',\n                    onClick: () => commands.copy()\n                },\n                {\n                    label: 'Top',\n                    key: 'top',\n                    icon: <VerticalAlignTopOutlined />,\n                    onClick: () => commands.placeTop()\n                },\n                {\n                    label: 'Bottom',\n                    key: 'bottom',\n                    icon: <VerticalAlignBottomOutlined />,\n                    onClick: () => commands.placeBottom()\n                },\n                {\n                    label: 'Watch',\n                    key: 'watch',\n                    icon: <EyeOutlined />,\n                    onClick: () => {\n                        setExportModalOption({\n                            title: 'Element JSON',\n                            content: JSON.stringify(block),\n                            isExport: true\n                        });\n                        setIsExportModalOpen(true);\n                    }\n                },\n                {\n                    label: 'Import',\n                    key: 'import',\n                    icon: <ImportOutlined />,\n                    onClick: () => {\n                        setExportModalOption({\n                            title: 'Import Element JSON',\n                            content: '',\n                            footer: true,\n                            isExport: false,\n                            callback: text => {\n                                text = JSON.parse(text);\n                                commands.updateBlock(text, block);\n\n                                setIsExportModalOpen(false);\n                            }\n                        });\n                        setIsExportModalOpen(true);\n                    }\n                }\n            ]\n        });\n    };\n\n    const { commands } = useCommand(data, getFocusData, {\n        updateData\n    });\n    const buttons = [\n        {\n            label: 'Undo',\n            icon: <RollbackOutlined />,\n            handler: () => {\n                commands.undo();\n            }\n        },\n        {\n            label: 'Redo',\n            icon: <RollbackOutlined rotate={180} />,\n            handler: () => commands.redo()\n        },\n        {\n            label: 'Save',\n            icon: <SaveOutlined />,\n            handler: () => {\n                setExportModalOption({\n                    title: 'Export JSON',\n                    content: JSON.stringify(data),\n                    isExport: true,\n                    async callback(name, content) {\n                        const res = await createTemplate({ name, content });\n                        if (res.code == 0) {\n                            messageApi.success(res.msg);\n                            setIsExportModalOpen(false);\n                        }\n                    }\n                });\n                setIsExportModalOpen(true);\n            }\n        },\n        {\n            label: 'Import',\n            icon: <ImportOutlined />,\n            handler: () => {\n                setExportModalOption({\n                    title: 'Import JSON',\n                    content: '',\n                    footer: true,\n                    isExport: false\n                });\n                setIsExportModalOpen(true);\n            }\n        },\n        {\n            label: 'Top',\n            icon: <VerticalAlignTopOutlined />,\n            handler: () => commands.placeTop()\n        },\n        {\n            label: 'Bottom',\n            icon: <VerticalAlignBottomOutlined />,\n            handler: () => commands.placeBottom()\n        },\n        {\n            label: 'Copy',\n            icon: <CopyOutlined />,\n            handler: () => commands.copy()\n        },\n        {\n            label: 'Delete',\n            icon: <CloseOutlined />,\n            handler: () => commands.delete()\n        },\n        {\n            label: 'Clear',\n            icon: <ClearOutlined />,\n            handler: () => commands.clear()\n        },\n        {\n            label: () => {\n                return isPreview ? 'Edit' : 'Preview';\n            },\n            icon: () => {\n                return isPreview ? <EditOutlined /> : <EyeOutlined />;\n            },\n            handler: () => {\n                setIsPreview(!isPreview);\n                clearBlockFocus();\n            }\n        },\n        {\n            label: 'Close',\n            icon: <CloseOutlined />,\n            handler: () => {\n                setIsPreview(true);\n                setCanEdit(false);\n                clearBlockFocus();\n            }\n        }\n    ];\n\n    const rightSiderTabItems = [\n        {\n            key: '1',\n            label: `Attribute`,\n            children: (\n                <div style={{ padding: '10px' }}>\n                    <div className='demo-logo-vertical' />\n                    <EditorOperator\n                        getLastSelectedBlock={getLastSelectedBlock}\n                        lastSelectedIndex={lastSelectedIndex}\n                        data={data}\n                        config={config}\n                        editData={lastSelectedIndex > -1 ? getLastSelectedBlock() : data.container}\n                        updateContainer={newContainer => {\n                            commands.updateContainer(newContainer);\n                        }}\n                        updateBlock={(newBlock, oldBlock) => {\n                            commands.updateBlock(newBlock, oldBlock);\n                        }}\n                        globalData={globalData}\n                        updateGlobalData={updateGlobalData}\n                    />\n                </div>\n            )\n        },\n        {\n            key: '2',\n            label: `Event`,\n            children: `Content of Tab Event`\n        }\n    ];\n\n    return !canEdit ? (\n        <div>\n            <div\n                style={{\n                    ...containerStyles,\n                    position: 'relative'\n                }}\n                ref={containerRef}\n                onMouseDown={containerMouseDown}>\n                {data.blocks.map((block, index) => {\n                    return (\n                        <EditorBlock\n                            block={block}\n                            key={index}\n                            config={config}\n                            isPreview={true}\n                            updateBlock={updateBlock}\n                            onMouseDown={e => blockMouseDown(e, block)}\n                            globalData={globalData}\n                            updateGlobalData={updateGlobalData}\n                        />\n                    );\n                })}\n            </div>\n            <div style={{ position: 'absolute', right: 10, top: 10 }}>\n                <Button type='primary' onClick={() => setCanEdit(true)} ghost>\n                    Back to Edit\n                </Button>\n                <div>{JSON.stringify(globalData)}</div>\n            </div>\n        </div>\n    ) : (\n        <Layout\n            style={{\n                height: '86vh'\n            }}\n            hasSider>\n            <Sider theme='light' width={'20%'}>\n                <div style={{ overflow: 'scroll', height: '95%' }}>\n                    {config.componentList.map((component, index) => {\n                        return (\n                            <div\n                                className='editor-left-item'\n                                draggable\n                                onDragStart={e => {\n                                    onDragStart(e, component);\n                                }}\n                                onDragEnd={onDragEnd}\n                                key={index}>\n                                <span>{component.label}</span>\n                                <div>{component.preview(0)}</div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </Sider>\n\n            {contextHolder}\n            <ExportModal\n                isModalOpen={isExportModalOpen}\n                setIsModalOpen={setIsExportModalOpen}\n                option={exportModalOption}\n                setOption={setExportModalOption}\n                handleOk={handleOk}\n                handleCancel={handleCancel}\n            />\n\n            <Layout>\n                <Header\n                    style={{\n                        padding: 0,\n                        background: colorBgContainer\n                    }}>\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            marginTop: '4px'\n                        }}>\n                        {buttons.map((btn, index) => {\n                            const icon = typeof btn.icon == 'function' ? btn.icon() : btn.icon;\n                            const label = typeof btn.label == 'function' ? btn.label() : btn.label;\n\n                            return (\n                                <div className='editor-top-button' onClick={btn.handler} key={index}>\n                                    <span style={{ height: '20px' }}>{icon}</span>\n                                    <span>{label}</span>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </Header>\n                <Content\n                    style={{\n                        margin: '20px 16px',\n                        position: 'relative'\n                        // height: '500px'\n                    }}>\n                    <div\n                        style={{\n                            // padding: 14,\n                            background: colorBgContainer\n                        }}\n                        ref={containerRef}\n                        onMouseDown={containerMouseDown}>\n                        {!isPreview && <Grid />}\n                        <div\n                            style={{\n                                ...containerStyles\n                            }}>\n                            {data.blocks.map((block, index) => {\n                                return (\n                                    <EditorBlock\n                                        block={block}\n                                        key={index}\n                                        config={config}\n                                        isPreview={isPreview}\n                                        updateBlock={updateBlock}\n                                        onMouseDown={e => blockMouseDown(e, block)}\n                                        onContextMenu={e => onContextMenuBlock(e, block)}\n                                        globalData={globalData}\n                                        updateGlobalData={updateGlobalData}\n                                    />\n                                );\n                            })}\n                        </div>\n                        <div>\n                            {markLine.x !== null && <div className='line-x' style={{ left: markLine.x + 'px' }}></div>}\n                            {markLine.y !== null && <div className='line-y' style={{ top: markLine.y + 'px' }}></div>}\n                        </div>\n                        <MenuDropdown\n                            option={menuDropdownOption}\n                            isShow={isShowMenuDropdown}\n                            setIsShow={setIsShowMenuDropdown}\n                            menuDropdownStyle={menuDropdownStyle}\n                            menuDropdownRef={menuDropdownRef}\n                        />\n                    </div>\n                </Content>\n                {/* <Footer\n                    style={{\n                        textAlign: 'center'\n                    }}>\n                    ©2023 Created by Trex\n                </Footer> */}\n            </Layout>\n\n            <Sider theme='light' width={'20%'}>\n                <Tabs defaultActiveKey='1' items={rightSiderTabItems} style={{ padding: '20px' }}></Tabs>\n            </Sider>\n        </Layout>\n    );\n}\n","import { events } from './events';\n\nexport default function useMenuDragger(containerRef, data, updateData) {\n  let currentComponent = null;\n  const dragenter = (e) => {\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const dragover = (e) => {\n    e.preventDefault();\n  };\n  const dragleave = (e) => {\n    e.dataTransfer.dropEffect = 'none';\n  };\n  const drop = (e) => {\n    let blocks = data.blocks;\n\n    const newData = {\n      ...data,\n      blocks: [\n        ...blocks,\n        {\n          top: e.offsetY,\n          left: e.offsetX,\n          zIndex: 1,\n          key: currentComponent.key,\n          alignCenter: true,\n          index: blocks.length,\n          props: {},\n          model: {},\n        },\n      ],\n    };\n    updateData(newData);\n\n    // currentComponent = null;\n  };\n\n  const onDragStart = (e, component) => {\n    containerRef.current.addEventListener('dragenter', dragenter);\n    containerRef.current.addEventListener('dragover', dragover);\n    containerRef.current.addEventListener('dragleave', dragleave);\n    containerRef.current.addEventListener('drop', drop);\n\n    currentComponent = component;\n\n    events.emit('start');\n  };\n\n  const onDragEnd = (e) => {\n    containerRef.current.removeEventListener('dragenter', dragenter);\n    containerRef.current.removeEventListener('dragover', dragover);\n    containerRef.current.removeEventListener('dragleave', dragleave);\n    containerRef.current.removeEventListener('drop', drop);\n\n    events.emit('end');\n  };\n\n  return {\n    onDragStart,\n    onDragEnd,\n  };\n}\n","import { useRef } from 'react';\n\nexport function useFocus(\n  data,\n  isPreview,\n  menuDropdownRef,\n  updateFunc,\n  callback\n) {\n  const { updateData, updateBlock, setLastSelectedIndex } = updateFunc;\n\n  const lastSelectedBlockIndex = useRef(-1);\n  const getLastSelectedBlock = () => {\n    return data.blocks[lastSelectedBlockIndex.current];\n  };\n\n  const getFocusData = () => {\n    let focused = [];\n    let unfocused = [];\n\n    data.blocks.forEach((block) => {\n      (block.focus ? focused : unfocused).push(block);\n    });\n\n    return { focused, unfocused };\n  };\n\n  const clearBlockFocus = () => {\n    const newBlocks = data.blocks.map((block) => {\n      block.focus = false;\n      return block;\n    });\n\n    updateData({\n      ...data,\n      blocks: newBlocks,\n    });\n  };\n\n  const blockMouseDown = (e, block) => {\n    if (isPreview) return;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.shiftKey) {\n      if (getFocusData().focused.length <= 1) {\n        block.focus = true;\n      } else {\n        block.focus = !block.focus;\n      }\n    } else {\n      if (!block.focus) {\n        clearBlockFocus();\n        block.focus = true;\n      }\n      // cannot be defocused unless click container\n    }\n\n    updateBlock(block);\n\n    lastSelectedBlockIndex.current = block.index;\n    setLastSelectedIndex(block.index);\n    callback(e);\n  };\n\n  const containerMouseDown = (e) => {\n    if (isPreview) return;\n\n    if (!menuDropdownRef.current?.contains(e.target)) {\n      clearBlockFocus();\n      lastSelectedBlockIndex.current = -1;\n      setLastSelectedIndex(-1);\n    }\n  };\n\n  return {\n    blockMouseDown,\n    containerMouseDown,\n    getFocusData,\n    getLastSelectedBlock,\n    clearBlockFocus,\n  };\n}\n","import { useState } from 'react';\nimport { events } from './events';\n\nexport function useBlockDragger(\n  getFocusData,\n  getLastSelectedBlock,\n  data,\n  updateFunc\n) {\n  const { updateBlock } = updateFunc;\n\n  //   const [x, setX] = useState(null);\n  //   const [y, setY] = useState(null);\n  const [markLine, setMarkLine] = useState({ x: null, y: null });\n\n  let dragState = {\n    startX: 0,\n    startY: 0,\n    dragging: false, // is in dragging\n  };\n  const mousedown = (e) => {\n    const { width: BWidth, height: BHeight } = getLastSelectedBlock();\n\n    dragState = {\n      startX: e.clientX,\n      startY: e.clientY,\n      startLeft: getLastSelectedBlock().left,\n      startTop: getLastSelectedBlock().top,\n      dragging: false,\n      startPos: getFocusData().focused.map(({ top, left }) => ({\n        top,\n        left,\n      })),\n      lines: (() => {\n        const { unfocused } = getFocusData();\n\n        let lines = { x: [], y: [] };\n        [\n          ...unfocused,\n          {\n            top: 0,\n            left: 0,\n            width: data.container.width,\n            height: data.container.height,\n          },\n        ].forEach((block) => {\n          const {\n            top: ATop,\n            left: ALeft,\n            width: AWidth,\n            height: AHeight,\n          } = block;\n\n          lines.y.push({ showTop: ATop, top: ATop }); // top to top\n          lines.y.push({ showTop: ATop, top: ATop - BHeight }); // top to bottom\n          lines.y.push({\n            showTop: ATop + AHeight / 2,\n            top: ATop + AHeight / 2 - BHeight / 2,\n          }); // mid to mid\n          lines.y.push({\n            showTop: ATop + AHeight,\n            top: ATop + AHeight,\n          }); // bottom to top\n          lines.y.push({\n            showTop: ATop + AHeight,\n            top: ATop + AHeight - BHeight,\n          }); // bottom to bottom\n\n          lines.x.push({ showLeft: ALeft, left: ALeft }); // left to left\n          lines.x.push({ showLeft: ALeft + AWidth, left: ALeft + AWidth }); // right to left\n          lines.x.push({\n            showLeft: ALeft + AWidth / 2,\n            left: ALeft + AWidth / 2 - BWidth / 2,\n          }); // mid to mid\n          lines.x.push({\n            showLeft: ALeft + AWidth,\n            left: ALeft + AWidth - BWidth,\n          }); // right to right\n          lines.x.push({\n            showLeft: ALeft,\n            left: ALeft - BWidth,\n          }); // left to right\n        });\n\n        return lines;\n      })(),\n    };\n\n    document.addEventListener('mousemove', mousemove);\n    document.addEventListener('mouseup', mouseup);\n  };\n\n  const mousemove = (e) => {\n    let { clientX: moveX, clientY: moveY } = e;\n\n    if (!dragState.dragging) {\n      dragState.dragging = true;\n      events.emit('start');\n    }\n\n    // calculate lines\n    let left = moveX - dragState.startX + dragState.startLeft;\n    let top = moveY - dragState.startY + dragState.startTop;\n\n    // show lines close to 5px\n    for (let i = 0; i < dragState.lines.y.length; i++) {\n      const { top: t, showTop: s } = dragState.lines.y[i];\n      const { left: l, showLeft: sLeft } = dragState.lines.x[i];\n\n      if (Math.abs(t - top) < 5) {\n        if (Math.abs(l - left) < 5) {\n          setMarkLine({ x: sLeft, y: s });\n          moveX = dragState.startX - dragState.startLeft + l;\n        } else {\n          setMarkLine({ ...markLine, y: s });\n        }\n        moveY = dragState.startY - dragState.startTop + t;\n        break;\n      }\n    }\n\n    for (let i = 0; i < dragState.lines.x.length; i++) {\n      const { left: l, showLeft: s } = dragState.lines.x[i];\n      const { top: t, showTop: sTop } = dragState.lines.y[i];\n\n      if (Math.abs(l - left) < 5) {\n        if (Math.abs(t - top) < 5) {\n          setMarkLine({ y: sTop, x: s });\n          moveY = dragState.startY - dragState.startTop + t;\n        } else {\n          setMarkLine({ ...markLine, x: s });\n        }\n\n        moveX = dragState.startX - dragState.startLeft + l;\n        break;\n      }\n    }\n\n    let durX = moveX - dragState.startX;\n    let durY = moveY - dragState.startY;\n\n    getFocusData().focused.forEach((block, index) => {\n      block.left = dragState.startPos[index].left + durX;\n      block.top = dragState.startPos[index].top + durY;\n\n      updateBlock(block);\n    });\n  };\n\n  const mouseup = (e) => {\n    document.removeEventListener('mousemove', mousemove);\n    document.removeEventListener('mouseup', mouseup);\n\n    setMarkLine({ x: null, y: null });\n\n    if (dragState.dragging) {\n      events.emit('end');\n    }\n  };\n\n  return {\n    mousedown,\n    markLine,\n  };\n}\n","import { useEffect, useState } from 'react';\nimport deepcopy from 'deepcopy';\nimport { events } from './events';\n\nexport function useCommand(data, getFocusData, updateFunc) {\n    const { updateData } = updateFunc;\n\n    const [queue, setQueue] = useState([]); // store operation commands\n    const [current, setCurrent] = useState(-1); // Forward and backward require a pointer\n\n    const [before, setBefore] = useState(null);\n\n    const state = {\n        commands: {}, // command -> handler\n        commandArray: [],\n        destroyArray: []\n    };\n\n    const registry = command => {\n        state.commandArray.push(command);\n\n        state.commands[command.name] = (...args) => {\n            const { redo, undo } = command.execute(...args);\n            redo();\n\n            if (!command.pushQueue) {\n                return;\n            }\n\n            if (queue.length > 0) {\n                setQueue(queue.slice(0, current + 1));\n            }\n\n            queue.push({ redo, undo });\n\n            setCurrent(current + 1);\n            setQueue(queue);\n        };\n    };\n\n    useEffect(() => {\n        registry({\n            name: 'redo',\n            keyboard: 'ctrl+y',\n            execute() {\n                return {\n                    redo() {\n                        let item = queue[current + 1];\n                        if (item) {\n                            item.redo?.();\n                            setCurrent(current + 1);\n                        }\n                    }\n                };\n            }\n        });\n\n        registry({\n            name: 'undo',\n            keyboard: 'ctrl+z',\n            execute() {\n                return {\n                    redo() {\n                        if (current === -1) {\n                            return;\n                        }\n\n                        let item = queue[current];\n                        if (item) {\n                            item.undo?.();\n                            setCurrent(current - 1);\n                        }\n                    }\n                };\n            }\n        });\n\n        registry({\n            name: 'drag',\n            pushQueue: true,\n            init() {\n                const start = () => {\n                    setBefore(deepcopy(data.blocks));\n                };\n                const end = () => {\n                    state.commands.drag();\n                };\n                events.on('start', start);\n                events.on('end', end);\n\n                return () => {\n                    events.off('start', start);\n                    events.off('end', end);\n                };\n            },\n            execute() {\n                let after = data.blocks;\n\n                return {\n                    redo() {\n                        updateData({ ...data, blocks: after });\n                    },\n                    undo() {\n                        updateData({ ...data, blocks: before });\n                    }\n                };\n            }\n        });\n\n        registry({\n            name: 'updateContainer',\n            pushQueue: true,\n            execute(newData) {\n                let beforeData = deepcopy(data);\n                let afterData = newData;\n\n                return {\n                    redo() {\n                        updateData(afterData);\n                    },\n                    undo() {\n                        updateData(beforeData);\n                    }\n                };\n            }\n        });\n\n        registry({\n            name: 'placeTop',\n            pushQueue: true,\n            execute() {\n                let beforeBlock = deepcopy(data.blocks);\n                setBefore(beforeBlock);\n\n                let after = (() => {\n                    let { focused, unfocused } = getFocusData();\n\n                    let maxZIndex = unfocused.reduce((prev, block) => {\n                        return Math.max(prev, block.zIndex);\n                    }, -Infinity);\n\n                    focused.forEach(block => (block.zIndex = maxZIndex + 1));\n\n                    return [...focused, ...unfocused];\n                })();\n\n                return {\n                    redo() {\n                        updateData({ ...data, blocks: after });\n                    },\n                    undo() {\n                        updateData({ ...data, blocks: beforeBlock });\n                    }\n                };\n            }\n        });\n\n        registry({\n            name: 'placeBottom',\n            pushQueue: true,\n            execute() {\n                let beforeBlock = deepcopy(data.blocks);\n                setBefore(beforeBlock);\n                let after = (() => {\n                    let { focused, unfocused } = getFocusData();\n\n                    let minZIndex =\n                        unfocused.reduce((prev, block) => {\n                            return Math.min(prev, block.zIndex);\n                        }, Infinity) - 1;\n\n                    if (minZIndex < 0) {\n                        const dur = Math.abs(minZIndex);\n                        minZIndex = 0;\n                        unfocused.forEach(block => (block.zIndex += dur));\n                    }\n\n                    focused.forEach(block => (block.zIndex = minZIndex));\n\n                    return [...focused, ...unfocused];\n                })();\n\n                return {\n                    redo() {\n                        updateData({ ...data, blocks: after });\n                    },\n                    undo() {\n                        updateData({ ...data, blocks: beforeBlock });\n                    }\n                };\n            }\n        });\n\n        registry({\n            name: 'copy',\n            keyboard: 'ctrl+c',\n            pushQueue: true,\n            execute() {\n                let beforeBlock = deepcopy(data.blocks);\n                setBefore(beforeBlock);\n\n                let after = (() => {\n                    let { focused, unfocused } = getFocusData();\n\n                    let copyBlocks = [];\n                    focused.forEach(block => {\n                        copyBlocks.push(Object.assign({}, block));\n                    });\n\n                    const length = data.blocks.length;\n                    for (let i = 0; i < copyBlocks.length; i++) {\n                        copyBlocks[i].index = length + i;\n                        copyBlocks[i].top += 20;\n                        copyBlocks[i].left += 20;\n                    }\n\n                    return [...data.blocks, ...copyBlocks];\n                })();\n\n                return {\n                    redo() {\n                        updateData({ ...data, blocks: after });\n                    },\n                    undo() {\n                        updateData({ ...data, blocks: beforeBlock });\n                    }\n                };\n            }\n        });\n\n        registry({\n            name: 'clear',\n            pushQueue: true,\n            execute() {\n                let beforeBlock = deepcopy(data.blocks);\n                setBefore(beforeBlock);\n\n                let after = [];\n\n                return {\n                    redo() {\n                        updateData({ ...data, blocks: after });\n                    },\n                    undo() {\n                        updateData({ ...data, blocks: beforeBlock });\n                    }\n                };\n            }\n        });\n\n        registry({\n            name: 'delete',\n            pushQueue: true,\n            execute() {\n                let beforeBlock = deepcopy(data.blocks);\n                setBefore(beforeBlock);\n                let after = getFocusData().unfocused;\n\n                return {\n                    redo() {\n                        updateData({ ...data, blocks: after });\n                    },\n                    undo() {\n                        updateData({ ...data, blocks: beforeBlock });\n                    }\n                };\n            }\n        });\n\n        registry({\n            name: 'updateBlock',\n            pushQueue: true,\n            execute(newBlock, oldBlock) {\n                let beforeBlock = deepcopy(data.blocks);\n                setBefore(beforeBlock);\n\n                let after = (() => {\n                    let blocks = [...data.blocks];\n                    const index = blocks.indexOf(oldBlock);\n                    if (index > -1) {\n                        blocks.splice(index, 1, newBlock);\n                    }\n\n                    return blocks;\n                })();\n\n                return {\n                    redo() {\n                        updateData({ ...data, blocks: after });\n                    },\n                    undo() {\n                        updateData({ ...data, blocks: beforeBlock });\n                    }\n                };\n            }\n        });\n\n        const keyboardEvent = (() => {\n            const keyCodes = {\n                67: 'c',\n                90: 'z',\n                89: 'y'\n            };\n\n            const onKeyDown = e => {\n                const { ctrlKey, metaKey, keyCode } = e;\n                let keyString = [];\n                if (ctrlKey || metaKey) keyString.push('ctrl');\n                keyString.push(keyCodes[keyCode]);\n                keyString = keyString.join('+');\n\n                state.commandArray.forEach(({ keyboard, name }) => {\n                    if (!keyboard) {\n                        return;\n                    }\n\n                    if (keyboard === keyString) {\n                        state.commands[name]();\n                        e.preventDefault();\n                    }\n                });\n            };\n\n            const init = () => {\n                window.addEventListener('keydown', onKeyDown);\n                return () => {\n                    window.removeEventListener('keydown', onKeyDown);\n                };\n            };\n            return init;\n        })();\n\n        (() => {\n            // Keyboard shortcuts\n            state.destroyArray.push(keyboardEvent());\n\n            state.commandArray.forEach(command => {\n                command.init && state.destroyArray.push(command.init());\n            });\n        })();\n\n        return () => {\n            state.destroyArray.forEach(fn => fn && fn());\n        };\n    });\n\n    return state;\n}\n","import { Button, Input, Progress, Upload, Descriptions, Select, Table } from 'antd';\nimport ImgCrop from 'antd-img-crop';\n\nfunction createEditorConfig() {\n    const componentList = [];\n    const componentMap = {};\n\n    return {\n        componentList,\n        componentMap,\n        register: component => {\n            componentList.push(component);\n            componentMap[component.key] = component;\n        }\n    };\n}\n\nexport let registerConfig = createEditorConfig();\n\nconst createInputProp = (label, name) => {\n    return {\n        type: 'input',\n        label,\n        name\n    };\n};\nconst createInputNumProp = (label, name) => {\n    return {\n        type: 'inputNum',\n        label,\n        name\n    };\n};\nconst createColorProp = (label, name) => {\n    return {\n        type: 'color',\n        label,\n        name\n    };\n};\nconst createSelectProp = (label, name, options) => {\n    return {\n        type: 'select',\n        label,\n        name,\n        options\n    };\n};\nconst createTableProp = (label, name, table) => {\n    return {\n        type: 'table',\n        label,\n        name,\n        table\n    };\n};\nconst createSwitchProp = (label, name, isRadio) => {\n    return {\n        type: 'switch',\n        label,\n        name,\n        isRadio\n    };\n};\n\nregisterConfig.register({\n    label: 'text',\n    preview: () => 'text preview',\n    render: ({ props }) => {\n        let colorHex = props.color;\n\n        const hexString = colorHex ? (typeof colorHex === 'string' ? colorHex : colorHex.toHexString()) : '#000';\n\n        return <span style={{ color: hexString, fontSize: props.size }}>{props.text || 'render text'}</span>;\n    },\n    key: 'text',\n    props: {\n        text: createInputProp('content text', 'text'),\n        color: createColorProp('font color', 'color'),\n        size: createSelectProp('font size', 'size', [\n            { label: '15px', value: '15px' },\n            { label: '20px', value: '20px' },\n            { label: '25px', value: '25px' }\n        ])\n    }\n});\n\nregisterConfig.register({\n    label: 'button',\n    resize: {\n        width: true,\n        height: true\n    },\n    preview: () => <Button>button preview</Button>,\n    render: ({ props, size }) => (\n        <Button type={props.type} size={props.size} style={{ width: size.width + 'px', height: size.height + 'px' }}>\n            {props.text || 'render button'}\n        </Button>\n    ),\n    key: 'button',\n    props: {\n        text: createInputProp('button text', 'text'),\n        type: createSelectProp('button type', 'type', [\n            { label: 'default', value: 'default' },\n            { label: 'primary', value: 'primary' },\n            { label: 'ghost', value: 'ghost' },\n            { label: 'dashed', value: 'dashed' },\n            { label: 'link', value: 'link' },\n            { label: 'text', value: 'text' }\n        ]),\n        size: createSelectProp('button size', 'size', [\n            { label: 'default', value: '' },\n            { label: 'small', value: 'small' },\n            { label: 'medium', value: 'medium' },\n            { label: 'large', value: 'large' }\n        ]),\n        submit: createSwitchProp('submit button', 'submit', true)\n    }\n});\n\nregisterConfig.register({\n    label: 'input',\n    resize: {\n        width: true\n    },\n    preview: () => <Input placeholder='input preview'></Input>,\n    render: ({ model, size }) => (\n        <Input placeholder='render input' {...model?.default} style={{ width: size.width + 'px' }}></Input>\n    ),\n    key: 'input',\n    model: {\n        default: 'Bound Field'\n    }\n});\n\nregisterConfig.register({\n    label: 'select',\n    preview: () => <Select style={{ width: 180 }} defaultValue={'select preview'} />,\n    render: ({ props, model }) => {\n        return (\n            <Select\n                style={{ width: 180 }}\n                defaultValue={'render select'}\n                options={props.options || []}\n                {...model?.default}\n            />\n        );\n    },\n    key: 'select',\n    props: {\n        options: createTableProp('options', 'options', {\n            options: [\n                { label: 'label', field: 'label' },\n                { label: 'value', field: 'value' }\n            ],\n            key: 'label'\n        })\n    },\n    model: {\n        default: 'Bound Field'\n    }\n});\n\nregisterConfig.register({\n    label: 'upload image',\n    preview: () => <Upload listType='picture-card'>+ Upload</Upload>,\n    render: ({ props, model }) => {\n        const maxCount = props.max_image_num || 1;\n        let fileList = model.default?.value || [];\n        fileList = fileList.slice(0, maxCount);\n\n        return (\n            <ImgCrop rotationSlider>\n                <Upload\n                    action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n                    listType='picture-card'\n                    maxCount={maxCount}\n                    fileList={fileList}\n                    disabled={fileList.length >= maxCount}\n                    {...model?.default}>\n                    {fileList.length < maxCount && '+ Upload'}\n                </Upload>\n            </ImgCrop>\n        );\n    },\n    key: 'upload_image',\n    props: {\n        max_image_num: createInputNumProp('max image num', 'max_image_num')\n    },\n    model: {\n        default: 'Bound Field'\n    }\n});\n\nconst columns = [\n    {\n        title: 'Col_1',\n        dataIndex: 'col_1',\n        key: 'col_1'\n    },\n    {\n        title: 'Col_2',\n        dataIndex: 'col_2',\n        key: 'col_2'\n    }\n];\nconst data = [\n    {\n        key: '1',\n        col_1: 'content_1',\n        col_2: 'content_2'\n    }\n];\n\nregisterConfig.register({\n    label: 'table',\n    preview: () => <Table style={{ width: '180px' }} columns={columns} dataSource={data} pagination={false} />,\n    render: () => <Table style={{ width: '180px' }} columns={columns} dataSource={data} pagination={false} />,\n    key: 'table',\n    model: {\n        default: 'Bound Field'\n    }\n});\n\nregisterConfig.register({\n    label: 'progress',\n    preview: () => <Progress percent={30} style={{ width: '180px' }} />,\n    render: () => <Progress percent={30} style={{ width: '180px' }} />,\n    key: 'progress',\n    model: {\n        default: 'Bound Field'\n    }\n});\n\nregisterConfig.register({\n    label: 'description',\n    preview: () => (\n        <Descriptions title='Description'>\n            <Descriptions.Item label='Label'>Value</Descriptions.Item>\n        </Descriptions>\n    ),\n    render: () => (\n        <Descriptions title='Description' size='small' style={{ width: '200px' }}>\n            <Descriptions.Item label='Label'>Value</Descriptions.Item>\n        </Descriptions>\n    ),\n    key: 'description'\n});\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport EditorApp from './editor';\nimport jsonData from '@/data/data.json';\nimport { registerConfig as config } from '@/configs/editor-config';\n\nexport default function Editor() {\n    let query = new URLSearchParams(useLocation().search);\n\n    const [data, setData] = useState(JSON.parse(query.get('data')) || jsonData);\n    const [globalData, setGlobalData] = useState({\n        test: 'test'\n    });\n\n    return (\n        <div style={{ height: '75%' }}>\n            <EditorApp\n                data={data}\n                updateData={setData}\n                config={config}\n                globalData={globalData}\n                updateGlobalData={setGlobalData}\n            />\n        </div>\n    );\n}\n"],"names":["createInstance","data","post","getInstanceList","get","operateInstance","removeInstance","params","del","createTemplate","getTemplateList","removeTemplate","createModel","getModelList","removeModel","createTask","getTaskList","removeTask","createImage","getImageList","getImageInfo","module","exports","process","BASE_URL","NODE_ENV","REACT_APP_BASE_URL_PRO","REACT_APP_BASE_URL_DEV","instance","axios","baseURL","concat","timeout","url","delete","interceptors","request","use","config","_ls$get$token","_ls$get","headers","token","ls","err","Promise","reject","response","code","window","location","replace","EditorBlock","props","blockRef","useRef","block","isPreview","updateBlock","onMouseDown","onContextMenu","globalData","updateGlobalData","blockStyles","top","left","zIndex","useEffect","_blockRef$current","current","offsetWidth","offsetHeight","newBlock","alignCenter","_objectSpread","width","height","onPreview","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","src","image","imgWindow","wrap","_context","prev","next","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","sent","Image","open","document","write","outerHTML","stop","_x","apply","arguments","component","componentMap","key","RenderComponent","render","size","hasResize","model","Object","keys","reduce","modelName","propName","value","onChange","e","newValue","target","fileList","newGlobalData","deepcopy","blockClassName","classNames","focus","_ref2","resize","_jsx","className","style","ref","children","events","mitt","TextArea","Input","ExportModal","option","setOption","isModalOpen","handleOk","handleCancel","_message$useMessage","message","_message$useMessage2","_slicedToArray","contextHolder","_useState","useState","_useState2","exportTitle","setExportTitle","_jsxs","Modal","title","footer","_Fragment","Button","onClick","danger","callback","isExport","content","type","onCancel","onOk","position","minHeight","Space","cursor","disabled","bordered","DropdownItem","item","icon","marginLeft","label","keyboard","right","color","MenuDropdown","_option$content","isShow","setIsShow","menuDropdownStyle","menuDropdownRef","onMousedownDocument","_menuDropdownRef$curr","contains","body","addEventListener","removeEventListener","display","map","TableModal","index","editData","setEditData","columns","dataIndex","rowScope","optionColumns","table","options","_","record","copyData","_toConsumableArray","push","newEditData","splice","marginBottom","length","Table","dataSource","TableEditor","propConfig","updateValue","isTableModalOpen","setIsTableModalOpen","_useState3","_useState4","setData","updateData","newData","Tag","SwitchEditor","Switch","checked","EditorOperator","getLastSelectedBlock","lastSelectedIndex","updateContainer","setContent","_Form$useForm","Form","form","messageApi","formValues","contentTmp","formItems","entries","_ref5","_ref6","name","input","inputNum","InputNumber","ColorPicker","format","select","Select","opt","getFieldValue","setFieldValue","switch","_ref7","_ref8","setFieldsValue","maxWidth","autoComplete","wrapperCol","offset","_form$getFieldsValue","getFieldsValue","container_width","container_height","container","newProps","newModel","forEach","_ref3","_ref4","startsWith","Grid","xmlns","id","patternUnits","d","fill","stroke","strokeWidth","Header","Layout","Content","Sider","EditorApp","isExportModalOpen","setIsExportModalOpen","exportModalOption","setExportModalOption","_useState5","_useState6","setIsPreview","_useState7","_useState8","canEdit","setCanEdit","_useState9","_useState10","isShowMenuDropdown","setIsShowMenuDropdown","_useState11","_useState12","setMenuDropdownStyle","_useState13","_useState14","menuDropdownOption","setMenuDropdownOption","_useState15","_useState16","setLastSelectedIndex","colorBgContainer","theme","containerStyles","newBlocks","blocks","containerRef","_useMenuDragger","currentComponent","dragenter","dataTransfer","dropEffect","dragover","preventDefault","dragleave","drop","offsetY","offsetX","onDragStart","emit","onDragEnd","useMenuDragger","_useFocus","updateFunc","lastSelectedBlockIndex","getFocusData","focused","unfocused","clearBlockFocus","blockMouseDown","stopPropagation","shiftKey","containerMouseDown","useFocus","mousedown","_useBlockDragger","x","y","markLine","setMarkLine","dragState","startX","startY","dragging","mousemove","moveX","clientX","moveY","clientY","startLeft","startTop","i","lines","_dragState$lines$y$i","t","s","showTop","_dragState$lines$x$i","l","sLeft","showLeft","Math","abs","_dragState$lines$x$_i","_dragState$lines$y$_i","sTop","durX","durY","startPos","mouseup","_getLastSelectedBlock","BWidth","BHeight","ATop","ALeft","AWidth","AHeight","useBlockDragger","_useCommand","queue","setQueue","setCurrent","before","setBefore","state","commands","commandArray","destroyArray","registry","command","_command$execute","execute","redo","undo","pushQueue","slice","_item$redo","call","_item$undo","init","start","end","drag","on","off","after","beforeData","afterData","beforeBlock","_getFocusData","maxZIndex","max","_getFocusData2","minZIndex","min","Infinity","dur","_getFocusData3","copyBlocks","assign","oldBlock","indexOf","keyboardEvent","keyCodes","onKeyDown","ctrlKey","metaKey","keyCode","keyString","join","fn","useCommand","buttons","RollbackOutlined","handler","rotate","SaveOutlined","JSON","stringify","res","success","msg","ImportOutlined","VerticalAlignTopOutlined","placeTop","VerticalAlignBottomOutlined","placeBottom","CopyOutlined","copy","CloseOutlined","ClearOutlined","clear","EditOutlined","EyeOutlined","rightSiderTabItems","padding","newContainer","hasSider","overflow","componentList","draggable","preview","setIsModalOpen","importJson","parse","error","background","justifyContent","marginTop","btn","margin","text","onContextMenuBlock","Tabs","defaultActiveKey","items","ghost","registerConfig","register","createEditorConfig","createInputProp","createSelectProp","colorHex","hexString","toHexString","fontSize","submit","isRadio","createSwitchProp","placeholder","default","defaultValue","createTableProp","field","Upload","listType","_model$default","maxCount","max_image_num","ImgCrop","rotationSlider","action","createInputNumProp","col_1","col_2","Editor","query","URLSearchParams","useLocation","search","jsonData","test","setGlobalData","pagination","Progress","percent","Descriptions"],"sourceRoot":""}